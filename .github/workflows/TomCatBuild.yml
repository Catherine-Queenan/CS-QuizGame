name: Tomcat Smoke Test

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

env:
  LC_ALL: en_US.UTF-8

jobs:
  Tomcat_Test_Matrix:
    strategy:
      fail-fast: false
      matrix:
        isMain:
          - ${{ contains(github.ref, 'main') }}
        java: [ 21, 23, 24-ea ]
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        exclude:
          - os: windows-latest
            java: 21
          - os: macos-latest
            java: 21
          - os: windows-latest
            java: 24-ea
          - os: macos-latest
            java: 24-ea
    name: JDK${{ matrix.java }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    steps:
    - name: Git Checkout
      uses: actions/checkout@v4

    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java }}
        distribution: zulu

    # Step to download jakarta.servlet-api.jar
    - name: Download Servlet API
      run: |
        curl -O https://repo1.maven.org/maven2/jakarta/servlet/jakarta.servlet-api/5.0.0/jakarta.servlet-api-5.0.0.jar

   # Step to download org.json library
    - name: Download JSON Library
      run: |
        curl -O https://repo1.maven.org/maven2/org/json/json/20230227/json-20230227.jar

    # Compile Project Step with both libraries in Classpath
    - name: Compile Project
      run: |
        SOURCE_DIR="WEB-INF/classes" 
        mkdir -p build

        # Compile the files with the servlet API and JSON library in classpath
        find $SOURCE_DIR -name "*.java" -print0 | xargs -0 javac -cp "jakarta.servlet-api-5.0.0.jar:json-20230227.jar" -d build
      shell: bash
      
    - name: Set up Tomcat
      run: |
        curl -O https://dlcdn.apache.org/tomcat/tomcat-9/v9.0.74/bin/apache-tomcat-9.0.74.tar.gz
        tar -xzf apache-tomcat-9.0.74.tar.gz
        mv apache-tomcat-9.0.74 tomcat
      env:
        CATALINA_HOME: ${{ github.workspace }}/tomcat

    - name: Deploy to Tomcat
      run: |
        # Remove the existing ROOT application if necessary
        rm -rf $CATALINA_HOME/webapps/ROOT
        # Copy the compiled classes to the correct location
        cp -r build/* $CATALINA_HOME/webapps/ROOT
        # Start Tomcat
        $CATALINA_HOME/bin/startup.sh
      env:
        CATALINA_HOME: ${{ github.workspace }}/tomcat

    - name: Run Smoke Test
      run: |
        sleep 20  # Allow time for Tomcat to start
        curl --fail http://localhost:8081/login || exit 1

    - name: Upload Logs
      uses: actions/upload-artifact@v4
      with:
        name: JDK${{ matrix.java }}-${{ matrix.os }}-logs
        path: |
          $CATALINA_HOME/logs/*
        retention-days: 7
