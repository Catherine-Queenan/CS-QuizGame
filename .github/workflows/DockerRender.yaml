name: DockerRender

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        isMain:
          - ${{ contains(github.ref, 'main') }}
        java: [17]
    name: JDK${{ matrix.java }} ubuntu-latest
    runs-on: ubuntu-latest

    steps:
    - name: Git Checkout
      uses: actions/checkout@v4

    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java }}
        distribution: oracle
        
    - name: Build with Maven
      run: mvn clean package

    - name: Upload WAR file
      uses: actions/upload-artifact@v3
      with:
        name: quizapp
        path: target/quizapp-1.0-SNAPSHOT.war
        
    - name: Build Docker Images
      run: docker compose build

    - name: Run Tests
      run: |
        docker compose up -d
        sleep 10  # Adjust time as necessary
        docker compose logs  # View logs if needed
        # Add additional commands to verify container health
        docker compose down

    - name: Push Docker Images
      run: | 
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
        docker tag docker.io/library/cs-quizgame-app "${{ secrets.DOCKER_USERNAME }}/cs-quizgame:latest"
        docker push "${{ secrets.DOCKER_USERNAME }}/cs-quizgame:latest"

    - name: Login to Render
      env:
        RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }} 
        RENDER_SERVICE_ID: srv-csikovggph6c73a7jle0
      run: |
        curl -X POST https://api.render.com/deploys \
        -H "Content-Type: application/json" \
        -H "Authorization: Bearer $RENDER_API_KEY" \
        -d '{
              "serviceId": "srv-csikovggph6c73a7jle0",  # Replace with your Render service ID
              "branch": "main"  
            }'
