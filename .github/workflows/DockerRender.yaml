name: DockerRender

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        isMain:
          - ${{ contains(github.ref, 'main') }}
        java: [17]
        os: [ ubuntu-latest, windows-latest]
    name: JDK${{ matrix.java }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    steps:
    - name: Git Checkout
      uses: actions/checkout@v4

    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java }}
        distribution: oracle
        
    - name: Build with Maven
      run: mvn clean package

    - name: Upload WAR file
      uses: actions/upload-artifact@v2
      with:
        name: quizapp
        path: target/quizapp.war
        
    - name: Build Docker Images
      run: docker compose build

    - name: Run Tests
      run: docker compose up --abort-on-container-exit

    - name: Push Docker Images
      run: | 
        echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          docker tag cs-quizgame:latest ${{ secrets.DOCKER_USERNAME }}/cs-quizgame:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/cs-quizgame:latest
    - name: Login to Render
      env:
        RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }} 
        RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
      run: |
        curl -X POST https://api.render.com/deploys \
        -H "Content-Type: application/json" \
        -H "Authorization: Bearer $RENDER_API_KEY" \
        -d '{
              "serviceId": "${{ secrets.RENDER_SERVICE_ID }}",  # Replace with your Render service ID
              "branch": "main"  
            }'
